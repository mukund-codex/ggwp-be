{
    "name": "founderandlightning/fl-laravel_boilerplate",
    "type": "boilerplate",
    "description": "Laravel Boilerplate | LBP",
    "keywords": ["FounderAndLightning", "boilerplate", "laravel"],
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "doctrine/dbal": "^3.6",
        "guzzlehttp/guzzle": "^7.2",
        "laravel/cashier": "^13.17",
        "laravel/framework": "^10.0",
        "laravel/sanctum": "^3.2",
        "laravel/telescope": "^4.14",
        "laravel/tinker": "^2.8",
        "rollbar/rollbar-laravel": "^8.0",
        "spatie/laravel-permission": "^5.10"
    },
    "require-dev": {
        "barryvdh/laravel-ide-helper": "^2.13",
        "brainmaestro/composer-git-hooks": "dev-master",
        "enlightn/security-checker": "^1.10",
        "fakerphp/faker": "^1.9.1",
        "laravel/breeze": "^1.20",
        "laravel/pint": "^1.0",
        "laravel/sail": "^1.18",
        "mockery/mockery": "^1.4.4",
        "nunomaduro/collision": "^7.0",
        "pestphp/pest": "^2.3",
        "pestphp/pest-plugin-laravel": "^2.0",
        "phpmd/phpmd": "^2.13",
        "phpunit/phpunit": "^10.0",
        "spatie/laravel-ignition": "^2.0"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "dev": [
            "@post-root-package-install",
            "@putenv CACHE_DRIVER=file",
            "@post-create-project-cmd",
            "@php artisan migrate",
            "@php artisan db:seed",
            "chmod -R 777 storage bootstrap",
            "@cghooks",
            "@ide-helper"
        ],
        "cghooks": "[ -f vendor/bin/cghooks ] && vendor/bin/cghooks update || echo 'cghooks not found'",
        "ide-helper": [
            "@php artisan ide-helper:generate -n",
            "@php artisan ide-helper:meta -n",
            "@php artisan ide-helper:models -n"
        ],
        "phpmd": "vendor/bin/phpmd app text phpmd_ruleset.xml",
        "security-checker": "vendor/bin/security-checker security:check",
        "pint": "vendor/bin/pint app tests",
        "pest": "vendor/bin/pest --stop-on-error --stop-on-failure --parallel --compact",
        "coverage": "vendor/bin/pest --stop-on-error --stop-on-failure --parallel --compact --coverage",
        "postman": "postman collection run postman/ci-collection.json",
        "pre-commit": [
            "@pint",
            "@phpmd",
            "@security-checker"
        ],
        "pre-push": [
            "@pest"
        ],
        "post-merge": [
            "@php artisan migrate",
            "@php artisan db:seed",
            "composer install"
        ],
        "tests": [
            "@pre-commit",
            "@pre-push",
            "chmod -R 777 storage bootstrap",
            "@postman"
        ],
        "ci": [
            "@composer clearcache",
            "@composer install",
            "@dev",
            "@tests"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        },
        "hooks": {
            "config": {
                "stop-on-failure": [
                    "pre-commit",
                    "pre-push"
                ]
            },
            "pre-commit": [
                "docker-compose exec -T lbp-api composer run pre-commit"
            ],
            "pre-push": [
                "docker-compose exec -T lbp-api composer run pre-push"
            ],
            "post-merge": [
                "docker-compose exec -T lbp-api composer run post-merge"
            ]
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
